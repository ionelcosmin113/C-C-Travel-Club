package proiect.fis.CC.controller;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.control.CheckBox;
import javafx.scene.control.Label;
import javafx.scene.control.ListView;
import javafx.scene.control.SelectionMode;
import javafx.scene.control.TextField;
import javafx.scene.layout.AnchorPane;
import org.json.simple.JSONArray;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import proiect.fis.CC.exceptions.UsernameAlreadyExistsException;
import proiect.fis.CC.services.UserService;

public class RegistrationFormController {
    @FXML
    TextField username;
    @FXML
    TextField password;
    @FXML
    TextField email;
    @FXML
    ListView<String> address;
    @FXML
    TextField hotelName;
    @FXML
    Label usernameLabel;
    @FXML
    Label passwordLabel;
    @FXML
    Label emailLable;
    @FXML
    Label addressLable;
    @FXML
    Label hotelNameLable;
    @FXML
    Label registrationInfo;
    @FXML
    CheckBox id_Client;
    @FXML
    CheckBox id_Hotel;
    @FXML
    AnchorPane register;
    private boolean emptyField;
    private String role;
    private static JSONArray cities = new JSONArray();

    public RegistrationFormController() {
    }

    public void initialize() {
        JSONParser parser = new JSONParser();

        try {
            FileReader readFile = new FileReader("src/main/java/data/city.json");
            BufferedReader read = new BufferedReader(readFile);
            Object p = parser.parse(read);
            if (p instanceof JSONArray) {
                cities = (JSONArray)p;
            }
        } catch (IOException | ParseException var5) {
            var5.printStackTrace();
        }

        this.address.getItems().addAll(cities);
        this.address.getSelectionModel().setSelectionMode(SelectionMode.SINGLE);
    }

    @FXML
    public void Login(ActionEvent event) {
        this.emptyField = false;
        this.usernameLabel.setText("");
        this.passwordLabel.setText("");
        this.emailLable.setText("");
        this.addressLable.setText("");
        this.hotelNameLable.setText("Just for hotel managers");
        if (this.username.getText().isEmpty()) {
            this.usernameLabel.setText("Empty filed");
            this.emptyField = true;
        }

        if (this.password.getText().isEmpty()) {
            this.passwordLabel.setText("Empty filed");
            this.emptyField = true;
        }

        if (this.email.getText().isEmpty()) {
            this.emailLable.setText("Empty filed");
            this.emptyField = true;
        }

        if (this.address.getSelectionModel().getSelectedItems().isEmpty()) {
            this.addressLable.setText("Empty filed");
            this.emptyField = true;
        }

        if (this.hotelName.getText().isEmpty() && this.id_Hotel.isSelected()) {
            this.hotelNameLable.setText("Empty filed");
            this.emptyField = true;
        }

        if (this.emptyField) {
            this.registrationInfo.setText("Registration failed");
        } else if (!this.id_Hotel.isSelected() && !this.id_Client.isSelected()) {
            this.registrationInfo.setText("Choose one role");
        } else if (this.id_Hotel.isSelected() && this.id_Client.isSelected()) {
            this.registrationInfo.setText("Choose just one role");
        } else {
            if (this.id_Client.isSelected()) {
                this.role = "client";
            }

            if (this.id_Hotel.isSelected()) {
                this.role = "manager";
            }

            try {
                UserService.addUser(this.username.getText(), this.password.getText(), this.email.getText(), (String)this.address.getSelectionModel().getSelectedItem(), this.hotelName.getText(), this.role);
                this.registrationInfo.setText("Registration successful");
            } catch (UsernameAlreadyExistsException var3) {
                this.registrationInfo.setText(var3.getMessage());
            }

        }
    }

    public void Back() {
        try {
            AnchorPane pane = (AnchorPane)FXMLLoader.load(this.getClass().getClassLoader().getResource("Login.fxml"));
            this.register.getChildren().setAll(new Node[]{pane});
        } catch (Exception var2) {
            System.out.println("Cant load the window");
        }

    }
}
